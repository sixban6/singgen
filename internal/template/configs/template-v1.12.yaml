log: {disabled: false, level: warn, timestamp: true}
experimental:
  clash_api:
    external_controller: 192.168.31.1:9090
    external_ui: /etc/sing-box/ui
    secret: ""
    external_ui_download_detour: DirectConn
    default_mode: rule
    external_ui_download_url: "{mirror_url}/https://github.com/MetaCubeX/Yacd-meta/archive/gh-pages.zip"
  cache_file: {enabled: true, path: /etc/sing-box/cache.db}
dns:
  servers:
    - {tag: dns_local, type: udp, server: 114.114.114.114, detour: DNSLocal}
    - {tag: dns_proxy, type: https, server: 8.8.8.8, detour: DNSProxy}
    - {tag: dns_backup, type: https, server: 1.1.1.1, detour: DNSProxy}
  rules:
    - {clash_mode: Direct, server: dns_local}
    - {clash_mode: Global, server: dns_proxy}
    - {rule_set: geosite-cn, server: dns_local}
    - {rule_set: geosite-geolocation-!cn, server: dns_proxy}
  final: dns_proxy
  strategy: prefer_ipv4
  disable_cache: false
  disable_expire: false
  independent_cache: true
  client_subnet: 223.5.5.5/24
inbounds:
  - {type: tproxy, tag: tproxy-in, listen: "::", listen_port: 7895, udp_timeout: 1m}
outbounds:
  - {tag: ChainProxy, type: selector, outbounds: ["{all}"], filter: [{action: include, keywords: ["sec_"]}]}
  - {tag: Test, type: selector, outbounds: [AAA]}
  - {tag: DNSLocal, type: selector, outbounds: [DirectConn, ChainProxy, block], interrupt_exist_connections: true }
  - {tag: DNSProxy, type: selector, outbounds: [AutoSelect-HK, AutoSelect-JP, NodeSelect, ChainProxy, block], interrupt_exist_connections: true}
  - {tag: NodeSelect, type: selector, outbounds: [AutoSelect-HK, AutoSelect-JP, AutoSelect-US, AutoSelect-SG, AutoSelect-TW, AutoSelect-KR, Select, ChainProxy, HK, JP, DirectConn], interrupt_exist_connections: true}
  - {tag: YouTube, type: selector, outbounds: [ChainProxy, AutoSelect-HK, HK, JP, NodeSelect], interrupt_exist_connections: true}
  - {tag: OpenAI, type: selector, outbounds: [AutoSelect-JP, JP, AutoSelect-US, US, NodeSelect], interrupt_exist_connections: true}
  - {tag: Google, type: selector, outbounds: [ChainProxy,AutoSelect-US, Select, AutoSelect, NodeSelect], interrupt_exist_connections: true}
  - {tag: Github, type: selector, outbounds: [ChainProxy, AutoSelect-SG, Select, AutoSelect, DirectConn, NodeSelect], interrupt_exist_connections: true}
  - {tag: Telegram, type: selector, outbounds: [ChainProxy, AutoSelect-SG, SG, Select, NodeSelect], interrupt_exist_connections: true}
  - {tag: Microsoft, type: selector, outbounds: [SG, ChainProxy, DirectConn, NodeSelect]}
  - {tag: Apple, type: selector, outbounds: [ChainProxy, DirectConn, AutoSelect, NodeSelect]}
  - {tag: Paypal, type: selector, outbounds: [ChainProxy, Select, AutoSelect, DirectConn, NodeSelect]}
  - {tag: Netflix, type: selector, outbounds: [AutoSelect-SG, SG, AutoSelect-HK, HK, ChainProxy, NodeSelect], interrupt_exist_connections: true}
  - {tag: Disney+, type: selector, outbounds: [AutoSelect-US, US, AutoSelect-SG, SG, HK, NodeSelect], interrupt_exist_connections: true}
  - {tag: HBO, type: selector, outbounds: [AutoSelect-US, US, AutoSelect-HK, HK, TW, NodeSelect], interrupt_exist_connections: true}
  - {tag: PrimeVideo, type: selector, outbounds: [AutoSelect-US, US, AutoSelect-JP, JP, UK, NodeSelect], interrupt_exist_connections: true}
  - {tag: Spotify, type: selector, outbounds: [AutoSelect-US, US, AutoSelect-HK, HK, TW, NodeSelect]}
  - {tag: TikTok, type: selector, outbounds: [AutoSelect-SG, SG, AutoSelect-JP, JP, US, NodeSelect]}
  - {tag: Steam, type: selector, outbounds: [AutoSelect-HK, AutoSelect-SG, HK, SG, DirectConn, NodeSelect]}
  - {tag: Epic, type: selector, outbounds: [AutoSelect-HK, HK, AutoSelect-US, US, DirectConn, NodeSelect]}
  - {tag: PlayStation, type: selector, outbounds: [AutoSelect-HK, HK, AutoSelect-JP, JP, US, NodeSelect]}
  - {tag: Xbox, type: selector, outbounds: [AutoSelect-HK, HK, AutoSelect-SG, SG, US, NodeSelect]}
  - {tag: BTC, type: selector, outbounds: [DirectConn, AutoSelect-SG, SG, AutoSelect-TW, TW, AutoSelect-JP, JP, NodeSelect]}
  - {tag: Douyin, type: selector, outbounds: [DirectConn, block]}
  - {tag: WeChatVideo, type: selector, outbounds: [DirectConn, block]}
  - {tag: HoK, type: selector, outbounds: [ChainProxy, HK, JP, SG]}
  - {tag: Others, type: selector, outbounds: [NodeSelect, ChainProxy, AutoSelect-SG, HK, JP, DirectConn]}
  - {tag: AutoSelect-HK, type: urltest, outbounds: ["{all}"], filter: [{action: include, keywords: ["香港|港|HK|Hong Kong|🇭🇰"]}], url: https://cp.cloudflare.com/generate_204, interval: 5m, tolerance: 100, interrupt_exist_connections: true}
  - {tag: AutoSelect-JP, type: urltest, outbounds: ["{all}"], filter: [{action: include, keywords: ["日本|日|JP|Japan|🇯🇵"]}], url: https://cp.cloudflare.com/generate_204, interval: 5m, tolerance: 100, interrupt_exist_connections: true}
  - {tag: AutoSelect-US, type: urltest, outbounds: ["{all}"], filter: [{action: include, keywords: ["美国|美國|美|US|USA|America|🇺🇸"]}], url: https://cp.cloudflare.com/generate_204, interval: 5m, tolerance: 100, interrupt_exist_connections: true}
  - {tag: AutoSelect-SG, type: urltest, outbounds: ["{all}"], filter: [{action: include, keywords: ["新加坡|狮城|獅城|坡|SG|Singapore|🇸🇬"]}], url: https://cp.cloudflare.com/generate_204, interval: 5m, tolerance: 100, interrupt_exist_connections: true}
  - {tag: AutoSelect-TW, type: urltest, outbounds: ["{all}"], filter: [{action: include, keywords: ["台湾|台灣|台|TW|Taiwan|🇹🇼"]}], url: https://cp.cloudflare.com/generate_204, interval: 5m, tolerance: 100, interrupt_exist_connections: true}
  - {tag: AutoSelect-KR, type: urltest, outbounds: ["{all}"], filter: [{action: include, keywords: ["韩国|韓國|韩|KR|Korea|🇰🇷"]}], url: https://cp.cloudflare.com/generate_204, interval: 5m, tolerance: 100, interrupt_exist_connections: true}
  - {tag: AutoSelect, type: urltest, outbounds: ["{all}"], filter: [{action: exclude, keywords: ["网站|地址|剩余|过期|时间|有效|官网|流量|sec"]}], url: https://cp.cloudflare.com/generate_204, interval: 5m, tolerance: 100, interrupt_exist_connections: true}
  - {tag: Select, type: selector, outbounds: ["{all}"], filter: [{action: exclude, keywords: ["网站|地址|剩余|过期|时间|有效|官网|流量|sec"]}]}
  - {tag: DirectConn, type: direct}
  - {tag: JP, type: selector, outbounds: ["{all}"], filter: [{action: include, keywords: ["日本|日|JP|Japan|🇯🇵"]}]}
  - {tag: HK, type: selector, outbounds: ["{all}"], filter: [{action: include, keywords: ["香港|港|HK|Hong Kong|🇭🇰"]}]}
  - {tag: US, type: selector, outbounds: ["{all}"], filter: [{action: include, keywords: ["美国|美國|美|US|USA|America|🇺🇸"]}]}
  - {tag: SG, type: selector, outbounds: ["{all}"], filter: [{action: include, keywords: ["新加坡|狮城|獅城|坡|SG|Singapore|🇸🇬"]}]}
  - {tag: UK, type: selector, outbounds: ["{all}"], filter: [{action: include, keywords: ["英国|英國|英|UK|Britain|🇬🇧"]}]}
  - {tag: TW, type: selector, outbounds: ["{all}"], filter: [{action: include, keywords: ["台湾|台灣|台|TW|Taiwan|🇹🇼"]}]}
  - {tag: KR, type: selector, outbounds: ["{all}"], filter: [{action: include, keywords: ["韩国|韓國|韩|KR|Korea|🇰🇷"]}]}
  - {tag: DE, type: selector, outbounds: ["{all}"], filter: [{action: include, keywords: ["德国|德國|德|DE|Germany|🇩🇪"]}]}
  - {tag: CA, type: selector, outbounds: ["{all}"], filter: [{action: include, keywords: ["加拿大|CA|Canada|🇨🇦"]}]}
  - {type: socks, tag: block, server: 0.0.0.0, server_port: 1080}
route:
  default_domain_resolver: {server: dns_local, rewrite_tll: 60, client_subnet: 223.5.5.5/24}
  auto_detect_interface: true
  final: Others
  default_mark: 1
  rules:
    - {action: sniff, timeout: 1s}
    - {action: hijack-dns, type: logical, mode: or, rules: [{port: 53}, {protocol: dns}]}
    - {ip_is_private: true, outbound: DirectConn}
    - {action: reject, rule_set: [geosite-ad1, geosite-ad2]}
    - {action: reject, protocol: quic}
    - {action: route, rule_set: geosite-steam, outbound: Steam}
    - {action: route, rule_set: geosite-epic, outbound: Epic}
    - {action: route, rule_set: geosite-playstation, outbound: PlayStation}
    - {action: route, rule_set: geosite-xbox, outbound: Xbox}
    - {action: route, rule_set: geosite-disney, outbound: Disney+}
    - {action: route, rule_set: geosite-hbo, outbound: HBO}
    - {action: route, rule_set: geosite-primevideo, outbound: PrimeVideo}
    - {action: route, rule_set: geosite-spotify, outbound: Spotify}
    - {action: route, rule_set: geosite-tiktok, outbound: TikTok}
    - {action: route, rule_set: geosite-douyin, outbound: Douyin}
    - {action: route, rule_set: geosite-wx-shortvideo, outbound: WeChatVideo}
    - {action: route, protocol: ssh, outbound: DirectConn}
    - {action: route, protocol: bittorrent, outbound: DirectConn}
    - {action: route, clash_mode: direct, outbound: DirectConn}
    - {action: route, clash_mode: global, outbound: AutoSelect}
    - {action: route, rule_set: geosite-hok, outbound: HoK}
    - {action: route, domain: [clash.razord.top, yacd.metacubex.one, yacd.haishan.me, d.metacubex.one], outbound: DirectConn}
    - {action: route, domain_suffix: [z-lib.gs, missav.com, missav.ws], outbound: NodeSelect}
    - {action: route, rule_set: geosite-cryptocurrency, outbound: BTC}
    - {action: route, rule_set: geosite-ctm_cn, outbound: DirectConn}
    - {action: route, rule_set: geosite-private, outbound: DirectConn}
    - {action: route, rule_set: geosite-chat, domain_suffix: [grok.com], outbound: OpenAI}
    - {action: route, rule_set: geosite-youtube, outbound: YouTube}
    - {action: route, rule_set: geosite-github, outbound: Github}
    - {action: route, rule_set: [geosite-google, geoip-google], outbound: Google}
    - {action: route, rule_set: [geosite-telegram, geoip-telegram], outbound: Telegram}
    - {action: route, rule_set: [geosite-apple, geoip-apple], outbound: Apple}
    - {action: route, rule_set: geosite-microsoft, outbound: Microsoft}
    - {action: route, rule_set: geosite-paypal, outbound: Paypal}
    - {action: route, rule_set: geosite-netflix, outbound: Netflix}
    - {action: route, rule_set: geosite-geolocation-!cn, outbound: NodeSelect}
    - {action: route, rule_set: [geoip-cn, geosite-cn], outbound: DirectConn}
  rule_set:
    - {tag: geosite-ad1, type: remote, format: binary, url: "{mirror_url}/https://github.com/Toperlock/sing-box-geosite/raw/main/rule/adservers.srs", download_detour: DirectConn}
    - {tag: geosite-ad2, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/privacy-protection-tools/anti-ad.github.io/master/docs/anti-ad-sing-box.srs", download_detour: DirectConn}
    - {tag: geosite-ctm_cn, type: remote, format: binary, url: "{mirror_url}/https://github.com/sixban6/rulesets/raw/refs/heads/main/rule/direct_cn.srs", download_detour: DirectConn}
    - {tag: geosite-chat, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/category-ai-chat-!cn.srs", download_detour: DirectConn}
    - {tag: geosite-steam, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/steam.srs", download_detour: DirectConn}
    - {tag: geosite-epic, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/epicgames.srs", download_detour: DirectConn}
    - {tag: geosite-playstation, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/sony.srs", download_detour: DirectConn}
    - {tag: geosite-xbox, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/xbox.srs", download_detour: DirectConn}
    - {tag: geosite-disney, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/disney.srs", download_detour: DirectConn}
    - {tag: geosite-hbo, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/hbo.srs", download_detour: DirectConn}
    - {tag: geosite-primevideo, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/primevideo.srs", download_detour: DirectConn}
    - {tag: geosite-spotify, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/spotify.srs", download_detour: DirectConn}
    - {tag: geosite-youtube, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/youtube.srs", download_detour: DirectConn}
    - {tag: geosite-google, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/google.srs", download_detour: DirectConn}
    - {tag: geosite-github, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/github.srs", download_detour: DirectConn}
    - {tag: geosite-telegram, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/telegram.srs", download_detour: DirectConn}
    - {tag: geosite-tiktok, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/tiktok.srs", download_detour: DirectConn}
    - {tag: geosite-netflix, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/netflix.srs", download_detour: DirectConn}
    - {tag: geosite-apple, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/apple.srs", download_detour: DirectConn}
    - {tag: geosite-microsoft, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/microsoft.srs", download_detour: DirectConn}
    - {tag: geosite-onedrive, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/onedrive.srs", download_detour: DirectConn}
    - {tag: geosite-geolocation-!cn, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/geolocation-!cn.srs", download_detour: DirectConn}
    - {tag: geosite-cn, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/cn.srs", download_detour: DirectConn}
    - {tag: geosite-private, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/private.srs", download_detour: DirectConn}
    - {tag: geoip-google, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geoip/google.srs", download_detour: DirectConn}
    - {tag: geoip-telegram, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geoip/telegram.srs", download_detour: DirectConn}
    - {tag: geoip-netflix, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geoip/netflix.srs", download_detour: DirectConn}
    - {tag: geoip-apple, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo-lite/geoip/apple.srs", download_detour: DirectConn}
    - {tag: geoip-cn, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geoip/cn.srs", download_detour: DirectConn}
    - {tag: geoip-private, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geoip/private.srs", download_detour: DirectConn}
    - {tag: geosite-wx-shortvideo, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/sixban6/rulesets/refs/heads/main/rule/wx_shortvideo.srs", download_detour: DirectConn}
    - {tag: geosite-douyin, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/sixban6/rulesets/refs/heads/main/rule/douyin.srs", download_detour: DirectConn}
    - {tag: geosite-paypal, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/paypal.srs", download_detour: DirectConn}
    - {tag: geosite-hok, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/sixban6/rulesets/refs/heads/main/rule/hok.srs", download_detour: DirectConn}
    - {tag: geosite-cryptocurrency, type: remote, format: binary, url: "{mirror_url}/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/category-cryptocurrency.srs", download_detour: DirectConn}